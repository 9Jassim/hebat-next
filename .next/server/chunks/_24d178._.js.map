{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/api.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst Client = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3000\",\r\n  withCredentials: true,\r\n})\r\n\r\nexport default Client\r\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,SAAS,mIAAM,MAAM,CAAC;IAC1B,SAAS,QAAQ,GAAG,CAAC,mBAAmB,IAAI;IAC5C,iBAAiB;AACnB;uCAEe"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/CategoryBar.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport Link from \"next/link\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { usePathname } from \"next/navigation\"\r\nimport Client from \"@/lib/api\"\r\n\r\nconst slugify = str =>\r\n  str\r\n    ?.toLowerCase()\r\n    .replace(/&/g, \"and\")\r\n    .replace(/[^a-z0-9\\s-]/g, \"\")\r\n    .trim()\r\n    .replace(/\\s+/g, \"-\") || \"\"\r\n\r\nexport default function CategoryBar({ refreshTrigger }) {\r\n  const pathname = usePathname()\r\n  const [categories, setCategories] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const currentCategoryFromPath =\r\n    pathname?.startsWith(\"/products/\") && pathname.split(\"/\")[2] ? pathname.split(\"/\")[2] : null\r\n  const isProductsPage = pathname?.startsWith(\"/products\")\r\n\r\n  useEffect(() => {\r\n    let active = true\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const res = await Client.get(\"/products/category\", { withCredentials: true })\r\n        if (active) setCategories(res.data.categories || [])\r\n      } catch (err) {\r\n        console.error(\"‚ùå Categories fetch error:\", err)\r\n      } finally {\r\n        if (active) setLoading(false)\r\n      }\r\n    }\r\n    fetchCategories()\r\n    const t = setTimeout(fetchCategories, 1500)\r\n    return () => {\r\n      active = false\r\n      clearTimeout(t)\r\n    }\r\n  }, [refreshTrigger])\r\n\r\n  return (\r\n    <div className=\"sticky top-[100px] md:top-[80px] left-0 right-0 z-40 bg-black border-t border-gray-800 shadow-sm\">\r\n      <div className=\"max-w-screen-xl mx-auto flex items-center py-2 px-2 relative\">\r\n        {loading ? (\r\n          <p className=\"text-gray-400 text-sm py-1\">Loading categories...</p>\r\n        ) : (\r\n          <>\r\n            {/* üß∑ Fixed ‚ÄúAll Products‚Äù on the left */}\r\n            <div className=\"flex-shrink-0 sticky left-0 z-10 bg-black pr-3\">\r\n              <Link\r\n                href=\"/products\"\r\n                className={`whitespace-nowrap px-3 py-2 rounded-md text-sm sm:text-base transition-colors ${\r\n                  isProductsPage && !currentCategoryFromPath\r\n                    ? \"text-yellow-500 font-semibold underline underline-offset-4\"\r\n                    : \"text-white hover:text-yellow-500\"\r\n                }`}\r\n              >\r\n                All Products\r\n              </Link>\r\n            </div>\r\n\r\n            {/* Scrollable categories */}\r\n            <div className=\"flex-1 overflow-x-auto no-scrollbar\">\r\n              <div className=\"flex space-x-3 md:space-x-4\">\r\n                {categories.length ? (\r\n                  categories.map(c => {\r\n                    const catSlug = slugify(c.name)\r\n                    const isActive = currentCategoryFromPath === catSlug\r\n                    return (\r\n                      <Link\r\n                        key={c._id}\r\n                        href={`/products/${catSlug}`}\r\n                        className={`whitespace-nowrap px-3 py-2 rounded-md text-sm sm:text-base transition-colors ${\r\n                          isActive\r\n                            ? \"text-yellow-500 font-semibold underline underline-offset-4\"\r\n                            : \"text-white hover:text-yellow-500\"\r\n                        }`}\r\n                      >\r\n                        {c.name}\r\n                      </Link>\r\n                    )\r\n                  })\r\n                ) : (\r\n                  <p className=\"text-gray-400 text-sm py-1\">No categories found</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAOA,MAAM,UAAU,CAAA,MACd,KACI,cACD,QAAQ,MAAM,OACd,QAAQ,iBAAiB,IACzB,OACA,QAAQ,QAAQ,QAAQ;AAEd,SAAS,YAAY,EAAE,cAAc,EAAE;IACpD,MAAM,WAAW;IACjB,MAAM,CAAC,YAAY,cAAc,GAAG,qNAAS,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,qNAAS;IAEvC,MAAM,0BACJ,UAAU,WAAW,iBAAiB,SAAS,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,SAAS,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG;IAC1F,MAAM,iBAAiB,UAAU,WAAW;IAE5C,sNAAU;QACR,IAAI,SAAS;QACb,MAAM,kBAAkB;YACtB,IAAI;gBACF,MAAM,MAAM,MAAM,+GAAO,GAAG,CAAC,sBAAsB;oBAAE,iBAAiB;gBAAK;gBAC3E,IAAI,QAAQ,cAAc,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE;YACrD,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC7C,SAAU;gBACR,IAAI,QAAQ,WAAW;YACzB;QACF;QACA;QACA,MAAM,IAAI,WAAW,iBAAiB;QACtC,OAAO;YACL,SAAS;YACT,aAAa;QACf;IACF,GAAG;QAAC;KAAe;IAEnB,qBACE,4OAAC;QAAI,WAAU;kBACb,cAAA,4OAAC;YAAI,WAAU;sBACZ,wBACC,4OAAC;gBAAE,WAAU;0BAA6B;;;;;qCAE1C;;kCAEE,4OAAC;wBAAI,WAAU;kCACb,cAAA;4BACE,MAAK;4BACL,WAAW,CAAC,8EAA8E,EACxF,kBAAkB,CAAC,0BACf,+DACA,mCACL,CAAC;sCACH;;;;;;;;;;;kCAMH,4OAAC;wBAAI,WAAU;kCACb,cAAA,4OAAC;4BAAI,WAAU;sCACZ,WAAW,MAAM,GAChB,WAAW,GAAG,CAAC,CAAA;gCACb,MAAM,UAAU,QAAQ,EAAE,IAAI;gCAC9B,MAAM,WAAW,4BAA4B;gCAC7C,qBACE;oCAEE,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC;oCAC5B,WAAW,CAAC,8EAA8E,EACxF,WACI,+DACA,mCACL,CAAC;8CAED,EAAE,IAAI;mCARF,EAAE,GAAG;;;;;4BAWhB,mBAEA,4OAAC;gCAAE,WAAU;0CAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS5D"}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}