{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/api.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nconst Client = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3000\",\r\n  withCredentials: true,\r\n})\r\n\r\nexport default Client\r\n"],"names":[],"mappings":";;;;;;;AAEA,MAAM,SAAS,sIAAM,MAAM,CAAC;IAC1B,SAAS,qKAAQ,GAAG,CAAC,mBAAmB,IAAI;IAC5C,iBAAiB;AACnB;uCAEe"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/CategoryBar.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport Link from \"next/link\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { usePathname } from \"next/navigation\"\r\nimport Client from \"@/lib/api\"\r\n\r\n// Helper to slugify category names\r\nfunction slugify(name = \"\") {\r\n  return name\r\n    .toLowerCase()\r\n    .replace(/&/g, \"and\") // replace \"&\" with \"and\"\r\n    .replace(/[^a-z0-9\\s-]/g, \"\") // remove special chars\r\n    .trim()\r\n    .replace(/\\s+/g, \"-\") // replace spaces with dashes\r\n}\r\n\r\nexport default function CategoryBar({ refreshTrigger }) {\r\n  const pathname = usePathname() // e.g. /products/sports-and-outdoors\r\n  const [categories, setCategories] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    let active = true\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const res = await Client.get(\"/products/category\", { withCredentials: true })\r\n        if (active) setCategories(res.data.categories || [])\r\n      } catch (err) {\r\n        console.error(\"❌ Categories fetch error:\", err)\r\n      } finally {\r\n        if (active) setLoading(false)\r\n      }\r\n    }\r\n    fetchCategories()\r\n    const t = setTimeout(fetchCategories, 1500)\r\n    return () => {\r\n      active = false\r\n      clearTimeout(t)\r\n    }\r\n  }, [refreshTrigger])\r\n\r\n  // Extract current category slug from the path\r\n  const activeCategory = pathname.split(\"/\")[2] || \"\"\r\n\r\n  return (\r\n    <div className=\"fixed top-[72px] left-0 right-0 z-40 bg-black border-t border-gray-800 shadow-sm overflow-x-auto no-scrollbar\">\r\n      <div className=\"max-w-screen-xl mx-auto px-2 flex items-center space-x-3 md:space-x-4 py-2\">\r\n        {loading ? (\r\n          <p className=\"text-gray-400 text-sm py-3\">Loading categories...</p>\r\n        ) : categories.length ? (\r\n          <>\r\n            {/* All Products link */}\r\n            <Link\r\n              href=\"/products\"\r\n              className={`whitespace-nowrap px-3 py-2 rounded-md transition-colors duration-200 text-sm sm:text-base ${\r\n                pathname === \"/products\"\r\n                  ? \"text-yellow-500 font-semibold underline underline-offset-4\"\r\n                  : \"text-white hover:text-yellow-500\"\r\n              }`}\r\n            >\r\n              All Products\r\n            </Link>\r\n\r\n            {/* Dynamic category links */}\r\n            {categories.map(c => {\r\n              const slug = slugify(c.name)\r\n              const isActive = activeCategory === slug\r\n\r\n              return (\r\n                <Link\r\n                  key={c._id}\r\n                  href={`/products/${slug}`}\r\n                  className={`whitespace-nowrap px-3 py-2 rounded-md transition-colors duration-200 text-sm sm:text-base ${\r\n                    isActive\r\n                      ? \"text-yellow-500 font-semibold underline underline-offset-4\"\r\n                      : \"text-white hover:text-yellow-500\"\r\n                  }`}\r\n                >\r\n                  {c.name}\r\n                </Link>\r\n              )\r\n            })}\r\n          </>\r\n        ) : (\r\n          <p className=\"text-gray-400 text-sm py-3\">No categories available</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;AAOA,mCAAmC;AACnC,SAAS;QAAQ,OAAA,iEAAO;IACtB,OAAO,KACJ,WAAW,GACX,OAAO,CAAC,MAAM,OAAO,yBAAyB;KAC9C,OAAO,CAAC,iBAAiB,IAAI,uBAAuB;KACpD,IAAI,GACJ,OAAO,CAAC,QAAQ,KAAK,6BAA6B;;AACvD;AAEe,SAAS,YAAY,KAAkB;QAAlB,EAAE,cAAc,EAAE,GAAlB;;IAClC,MAAM,WAAW,gJAAc,qCAAqC;;IACpE,MAAM,CAAC,YAAY,cAAc,GAAG,mKAAS,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,mKAAS;IAEvC,oKAAU;QACR,IAAI,SAAS;QACb,MAAM,kBAAkB;YACtB,IAAI;gBACF,MAAM,MAAM,MAAM,kHAAO,GAAG,CAAC,sBAAsB;oBAAE,iBAAiB;gBAAK;gBAC3E,IAAI,QAAQ,cAAc,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE;YACrD,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC7C,SAAU;gBACR,IAAI,QAAQ,WAAW;YACzB;QACF;QACA;QACA,MAAM,IAAI,WAAW,iBAAiB;QACtC,OAAO;YACL,SAAS;YACT,aAAa;QACf;IACF,GAAG;QAAC;KAAe;IAEnB,8CAA8C;IAC9C,MAAM,iBAAiB,SAAS,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI;IAEjD,qBACE,iLAAC;QAAI,WAAU;kBACb,cAAA,iLAAC;YAAI,WAAU;sBACZ,wBACC,iLAAC;gBAAE,WAAU;0BAA6B;;;;;uBACxC,WAAW,MAAM,iBACnB;;kCAEE;wBACE,MAAK;wBACL,WAAW,CAAC,2FAA2F,EACrG,aAAa,cACT,+DACA,mCACL,CAAC;kCACH;;;;;;oBAKA,WAAW,GAAG,CAAC,CAAA;wBACd,MAAM,OAAO,QAAQ,EAAE,IAAI;wBAC3B,MAAM,WAAW,mBAAmB;wBAEpC,qBACE;4BAEE,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC;4BACzB,WAAW,CAAC,2FAA2F,EACrG,WACI,+DACA,mCACL,CAAC;sCAED,EAAE,IAAI;2BARF,EAAE,GAAG;;;;;oBAWhB;;6CAGF,iLAAC;gBAAE,WAAU;0BAA6B;;;;;;;;;;;;;;;;AAKpD;GAzEwB;;;;;KAAA"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}